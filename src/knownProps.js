const HtmlAttrs = require("html-attributes");

const reactVersions = {
  allowTransparency: "allowtransparency",
  charset: "charset",
  class: "className",
  for: "htmlFor",
  isMap: "ismap",
  itemId: "itemID",
  typeMustMatch: "typemustmatch"
};

const reactSafeHtmlProps = Object.keys(HtmlAttrs).map(
  prop => (reactVersions[prop] ? reactVersions[prop] : prop)
);

const props = [
  ...reactSafeHtmlProps,

  // extra
  "about",
  "datatype",
  "defaultValue",
  "inlist",
  "prefix",
  "property",
  "resource",
  "typeof",
  "vocab",
  "autoCapitalize",
  "autoCorrect",
  "color",
  "itemProp",
  "itemScope",
  "itemType",
  "itemRef",
  "itemID",
  "security",
  "unselectable",
  "results",
  "autoSave",

  // handlers:
  "onBlur",
  "onChange",
  "onClick",
  "onContextMenu",
  "onCopy",
  "onCut",
  "onDoubleClick",
  "onDrag",
  "onDragEnd",
  "onDragEnter",
  "onDragExit",
  "onDragLeave",
  "onDragOver",
  "onDragStart",
  "onDrop",
  "onFocus",
  "onInput",
  "onKeyDown",
  "onKeyPress",
  "onKeyUp",
  "onMouseDown",
  "onMouseEnter",
  "onMouseLeave",
  "onMouseMove",
  "onMouseOut",
  "onMouseOver",
  "onMouseUp",
  "onPaste",
  "onScroll",
  "onSubmit",
  "onTouchCancel",
  "onTouchEnd",
  "onTouchMove",
  "onTouchStart",
  "onWheel",
  "onCompositionEnd",
  "onCompositionStart",
  "onCompositionUpdate",
  "onInvalid",
  "onPointerDown",
  "onPointerMove",
  "onPointerUp",
  "onPointerCancel",
  "onGotPointerCapture",
  "onLostPointerCapture",
  "onPointerEnter",
  "onPointerLeave",
  "onPointerOver",
  "onPointerOut",
  "onSelect",
  "onAbort",
  "onCanPlay",
  "onCanPlayThrough",
  "onDurationChange",
  "onEmptied",
  "onEncrypted",
  "onEnded",
  "onError",
  "onLoadedData",
  "onLoadedMetadata",
  "onLoadStart",
  "onPause",
  "onPlay",
  "onPlaying",
  "onProgress",
  "onRateChange",
  "onSeeked",
  "onSeeking",
  "onStalled",
  "onSuspend",
  "onTimeUpdate",
  "onVolumeChange",
  "onWaiting",
  "onLoad",
  "onError",
  "onAnimationStart",
  "onAnimationEnd",
  "onAnimationIteration",
  "onTransitionEnd",
  "onToggle"
];

module.exports = props;
